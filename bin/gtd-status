#!/bin/bash

source ./gtd-call-check
source ./gtd-check-git-clean

#echo "ARG 1: ${1:-""}"
#echo "ARG 2: ${2:-""}"

case ${1} in
  b) STATUS="background";;
  background) STATUS="background";;
  c) STATUS="closed";;
  closed) STATUS="closed";;
  n) STATUS="new";;
  new) STATUS="new";;
  s) STATUS="someday";;
  someday) STATUS="someday";;
  t) STATUS="todo";;
  todo) STATUS="todo";;
  w) STATUS="waiting";;
  waiting) STATUS="waiting";;
  *)
    if [[ "$(is_num "${1}")" != "0" ]]
    then
      echo 'Doing a search, as a number was not given...'
      gtd search "${1}"
      exit $?
    fi
    echo 'No status given'
    exit 1
  ;;
esac

readonly STATUS_UPPER="$(echo ${STATUS} | tr '[:lower:]' '[:upper:]')"

readonly RESULT="$(ls "${ROOT_FOLDER}/${STATUS_FOLDER}/${STATUS}"/*/"${NOTES_FILE}" 2> /dev/null)"
if [[ ${RESULT} == '' ]]
then
	echo "No tasks in status: ${STATUS_UPPER}"
	exit 10
else
	echo "Tasks in ${STATUS_UPPER} status"
	for task in $RESULT
	do
		if [[ "$task" =~ .*/([0-9]*)/${NOTES_FILE} ]]
		then
			THIS_TASK_NO="${BASH_REMATCH[1]}"
		else
			echo "Task number not matched for file: ${task}"
		fi
		THIS_TASK_FOLDER="${ROOT_FOLDER}/${TASKS_FOLDER}/${THIS_TASK_NO}"
		echo -n "${task}: $(head -1 "${task}")"
		if [[ -a "${THIS_TASK_FOLDER}/${REMINDME_FILE}" ]]
		then
			echo -n ". Reminder set for $(parse_date_in_seconds $(cat "${THIS_TASK_FOLDER}/${REMINDME_FILE}"))"
			if [[ -a "${THIS_TASK_FOLDER}/${REMINDME_REPEAT_FILE}" ]]
			then
				echo -n ", repeated every $(cat "${THIS_TASK_FOLDER}/${REMINDME_REPEAT_FILE}") days"
			fi
		fi
		echo
	done
fi
